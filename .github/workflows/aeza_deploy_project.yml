name: All-Project-CD

on:
  push:
    branches: [ "master" ]

jobs:
  checkout-repo:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

  create-env:
    runs-on: self-hosted
    needs: [ checkout-repo ]

    env:
      DEBUG: 'True'
      ALLOWED_HOSTS: '*'

    steps:
      - name: Write Django Env
        run: |
          echo "SECRET_KEY='${{ secrets.SECRET_KEY }}'" >> .env
          echo "DEBUG=${{ env.DEBUG }}" >> .env
          echo "ALLOWED_HOSTS='${{ env.ALLOWED_HOSTS }}'" >> .env
      - name: Write DB Env
        run: |
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env

  build:
    runs-on: self-hosted
    needs: [ create-env ]

    steps:
      - name: Remove old production
        run: |
          remove_images=$(docker-compose images -q)
          docker-compose --file ./docker-compose.yml down
          docker rmi $remove_images
      - name: Deploy updated repo
        run: |
          docker-compose --file ./docker-compose.yml up --build
